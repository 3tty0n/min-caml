<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=utf-8">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./tutorial-mincaml.files/filelist.xml">
<link rel=Edit-Time-Data href="./tutorial-mincaml.files/editdata.mso">
<link rel="stylesheet" href="sh.css" type="text/css">
<title>速攻MinCamlコンパイラ概説</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>住井 英二郎</o:Author>
  <o:LastAuthor>住井 英二郎</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>29</o:TotalTime>
  <o:LastPrinted>2005-02-25T06:25:00Z</o:LastPrinted>
  <o:Created>2005-03-01T17:12:00Z</o:Created>
  <o:LastSaved>2005-03-01T17:12:00Z</o:LastSaved>
  <o:Pages>20</o:Pages>
  <o:Words>3412</o:Words>
  <o:Characters>19450</o:Characters>
  <o:Company>東京大学 情報理工学系研究科 コンピュータ科学専攻</o:Company>
  <o:Lines>162</o:Lines>
  <o:Paragraphs>38</o:Paragraphs>
  <o:CharactersWithSpaces>23885</o:CharactersWithSpaces>
  <o:Version>9.6926</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:FormsDesign/>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>10 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:NoLineBreaksAfter Lang="JA">$([\{&pound;\‘“〈《「『【〔＄（［｛｢￥</w:NoLineBreaksAfter>
  <w:NoLineBreaksBefore Lang="JA">!%),.:;?]}&cent;°’”‰′″℃、。々〉》」』】〕゛゜ゝゞ・ヽヾ！％），．：；？］｝｡｣､･ﾞﾟ</w:NoLineBreaksBefore>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Times;
	panose-1:2 2 6 3 5 4 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"ＭＳ 明朝";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-alt:"MS Mincho";
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:"ＭＳ ゴシック";
	panose-1:2 11 6 9 7 2 5 8 2 4;
	mso-font-alt:"MS Gothic";
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"\@ＭＳ ゴシック";
	panose-1:2 11 6 9 7 2 5 8 2 4;
	mso-font-charset:128;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
@font-face
	{font-family:"\@ＭＳ 明朝";
	panose-1:2 2 6 9 4 2 5 8 3 4;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-pitch:fixed;
	mso-font-signature:-1610612033 1757936891 16 0 131231 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Times;
	mso-fareast-font-family:"ＭＳ 明朝";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
h1
	{mso-style-next:標準;
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"ＭＳ ゴシック";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;
	font-weight:normal;}
p.MsoDate, li.MsoDate, div.MsoDate
	{mso-style-next:標準;
	margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Times;
	mso-fareast-font-family:"ＭＳ 明朝";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0mm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	background:navy;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Helvetica;
	mso-fareast-font-family:"ＭＳ ゴシック";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:210.0mm 842.0pt;
	margin:99.25pt 30.0mm 30.0mm 30.0mm;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:20.0pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:756486447;
	mso-list-type:hybrid;
	mso-list-template-ids:-382311324;}
@list l0:level1
	{mso-level-tab-stop:24.0pt;
	mso-level-number-position:left;
	margin-left:24.0pt;
	text-indent:-24.0pt;}
@list l1
	{mso-list-id:1075280865;
	mso-list-type:hybrid;
	mso-list-template-ids:1663976776;}
@list l1:level1
	{mso-level-tab-stop:24.0pt;
	mso-level-number-position:left;
	margin-left:24.0pt;
	text-indent:-24.0pt;}
@list l2
	{mso-list-id:1845515139;
	mso-list-type:hybrid;
	mso-list-template-ids:1081884438;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F06C;
	mso-level-tab-stop:24.0pt;
	mso-level-number-position:left;
	margin-left:24.0pt;
	text-indent:-24.0pt;
	font-family:Wingdings;}
@list l3
	{mso-list-id:1923952290;
	mso-list-type:hybrid;
	mso-list-template-ids:1714310748;}
@list l3:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F06C;
	mso-level-tab-stop:21.0pt;
	mso-level-number-position:left;
	margin-left:21.0pt;
	text-indent:-21.0pt;
	font-family:Wingdings;}
ol
	{margin-bottom:0mm;}
ul
	{margin-bottom:0mm;}
-->
</style>
</head>

<body lang=JA link=blue vlink=purple style='tab-interval:48.0pt;text-justify-trim:
punctuation'>

<div class=Section1>

<h1><span style='font-family:"ＭＳ ゴシック";mso-ascii-font-family:Arial;mso-hansi-font-family:
Arial'>型推論</span><span lang=EN-US>(</span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>typing.ml</span></b><span
lang=EN-US>)</span></h1>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>普通の</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>ML</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>と同様に、</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>MinCaml</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>では変数や関数の型を書かなくても自動で推論してくれます。これを</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ ゴシック";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'><strong>型推論</strong></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>といい、多相関数や高階関数のあるプログラムでは非常に便利です。</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'>MinCaml</span><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;
mso-hansi-font-family:Century'>の型推論の本体は関数</span><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><a target="srcview"
href="min-caml.html#typing_g"><b style='mso-bidi-font-weight:normal'><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>Typing.g</span></b></a></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>です。この関数は、</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ ゴシック";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'><strong>型環境</strong></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>（変数の名前から、その型への写像）</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>env</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>と、式</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>e</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>とを受け取り、</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>e</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>の型を推論して返します。また、式の中に出てくる変数の型が合っているかどうかも調べます。もし未定義の型変数があったら、適切な型を代入します。このような代入により型を合わせる関数が</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'><a target="srcview"
href="min-caml.html#typing_unify">Typing.unify</a></span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>です。</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>たとえば、足し算</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><a target="srcview"
href="min-caml.html#typing_add"><b style='mso-bidi-font-weight:normal'><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>e1 +
e2</span></b></a></span><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>（</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>Syntax.t</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>に合わせて書くと</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>Add(e1,
e2)</span></b><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:Century'> </span><span style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>）だったら、まず</span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>g env e1</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>により部分式</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>e1</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>の型を推論し、その型が</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>int</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>であることを</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>unify</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>により確かめます。部分式</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>e2</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>についても同様です。そして、式全体の型として</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>int</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>を返します。</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>少しややこしい例としては、関数適用</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><a target="srcview"
href="min-caml.html#typing_app"><b style='mso-bidi-font-weight:normal'><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>e e1
... en</span></b></a></span><span style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:
Century'>があります。</span><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>e</span></b><span style='font-size:
10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";mso-ascii-font-family:
Century;mso-hansi-font-family:Century'>が関数で、</span><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>e1</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>から</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>en</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>までが引数です。この場合は、関数の型は</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>g
env e</span></b><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>、引数の型は</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>g
env e1</span></b><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'>, ..., </span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>g env en</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>のように推論できますが、返値の型がわかりません。そこで、未定義の新しい型変数</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>t</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>を作り、</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>g
env e</span></b><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>が「</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>g
env e1</span></b><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'>, ..., </span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>g env en </span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:"Courier New";mso-hansi-font-family:"Courier New"'>を受け取って</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>t</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:"Courier New";mso-hansi-font-family:"Courier New"'>を返す」関数型</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>と等しくなるように</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>unify</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>を呼んでいます。そして、式全体の型として</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>t</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>を返します。</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'><a target="srcview" href="min-caml.html#typing_let">let</a></span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>や</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'><a target="srcview"
href="min-caml.html#typing_letrec">let rec</a></span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>のように新しい変数が導入されるところでは、型環境</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>env</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>が拡張されます。逆に</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><a target="srcview"
href="min-caml.html#typing_var"><span style='font-family:"ＭＳ 明朝";mso-ascii-font-family:
Century;mso-hansi-font-family:Century'>変数</span><b style='mso-bidi-font-weight:
normal'><span style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>x</span></b></a></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>が出てきたら、型環境</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>env</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>を引いて型を得ます。ただし、</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><a target="srcview"
href="min-caml.html#typing_extvar"><span style='font-family:"ＭＳ 明朝";mso-ascii-font-family:
Century;mso-hansi-font-family:Century'>型環境に含まれていない変数</span></a></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>が出てきたら、プログラムの外から与えられる</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ ゴシック";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'><strong>外部変数</strong></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>とみなし、未定義の新しい型変数を与え、外部変数のための特別な環境</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>extenv</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>に追加します。これは普通の</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>ML</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>では実現されてない、</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>MinCaml</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>に特有の機能です。これにより、宣言しなくても外部変数を使用することができます。</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>関数</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>Typing.unify</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>は、与えられた二つの型が等しいかどうかを中まで調べていき、一方が</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><a target="srcview"
href="min-caml.html#typing_undef"><span
style='font-family:"ＭＳ 明朝";mso-ascii-font-family:"Courier New";mso-hansi-font-family:
"Courier New"'>未定義の型変数</span></a></span><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>Type.var(ref
None)</span></b><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>だったら、他方と等しくなるように代入を行います。ただし一方の型変数が、他方の型の中に現れていないかどうかチェックします（</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><a target="srcview"
href="min-caml.html#typing_occur">occur check</a></span><span style='font-size:
10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";mso-ascii-font-family:
Century;mso-hansi-font-family:Century'>と呼ばれます）。もし現れていると、代入結果の型にサイクルができてしまうからです。たとえば、もし（</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>occur
check</span><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:
"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>をしないで）型変数α</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>と関数型</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>int</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>→α<span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:Symbol;mso-ascii-font-family:Century;
mso-hansi-font-family:Century;mso-char-type:symbol;mso-symbol-font-family:Symbol'></span>を</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>unify</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>してしまうと、α</span><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:Symbol;mso-ascii-font-family:Century;
mso-hansi-font-family:Century;mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:Symbol;mso-ascii-font-family:Century;
mso-hansi-font-family:Century;mso-char-type:symbol;mso-symbol-font-family:Symbol'></span></span></span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>
= int</span><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:
"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>→αなので、</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>int</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>→</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>int</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>→</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>int</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>→</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>...</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>という無限長の型になってしまいます！　このようなことを防止するために（ちょっとややこしいですが）</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>occur
check</span><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:
"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>は必要なのです。</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;
font-family:"ＭＳ 明朝";mso-ascii-font-family:Century;mso-hansi-font-family:Century'>型推論が終了したら（エラーでも正常終了でも）、結果をわかりやすくするために、すべての型変数をその中身でおきかえます（</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'><a target="srcview"
href="min-caml.html#typing_deref">Typing.deref_typ</a></span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>）。もしまだ未定義の型変数があったら、型が決まらないということなので、勝手に</span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>int</span></b><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>としてしまいます。これも</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'>MinCaml</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:"ＭＳ 明朝";
mso-ascii-font-family:Century;mso-hansi-font-family:Century'>に特有の仕様です。</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><o:p></o:p></span></p>
<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
<p class=MsoNormal><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-family:Century'><a
href="tutorial-mincaml-9.htm"><span style='font-family:"ＭＳ 明朝";mso-ascii-font-family:
Century;mso-hansi-font-family:Century'>次へ進む</span></a></span></p>
<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-family:Century'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-1484933-2";
urchinTracker();
</script>
</body>

</html>
